plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id "com.palantir.docker" version "0.36.0"
}

group = 'com.community'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.3")
    set('imagePrefix', 'donkey')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

docker {
    name "${imagePrefix}/${project.name}:${project.version}"
    tags "${project.version}"
    files tasks.bootJar.outputs.files
    dockerfile file('Dockerfile')
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
    dependsOn tasks.bootJar
    build
    push true
}

tasks.register('buildAndPushDockerImage') {
    dependsOn tasks.docker
}

tasks.build {
    finalizedBy tasks.buildAndPushDockerImage
}